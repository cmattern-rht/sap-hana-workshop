---

# initial setup
- name: get existing job
  awx.awx.tower_job_list:
    tower_username: admin
    tower_password: "{{ admin_password }}"
    tower_host: "{{ ansible_host }}"
    tower_verify_ssl: false
    query: { "name": "{{ tower_sap_initial_config_jt_name }}" }
  register: tower_job_1

- block:
    - name: run sap initial setup job template via tower
      awx.awx.tower_job_launch:
        tower_username: admin
        tower_password: "{{ admin_password }}"
        tower_host: "{{ ansible_host }}"
        tower_verify_ssl: false
        job_template: "{{ tower_sap_initial_config_jt_name }}"
        wait: no
      register: tower_job_initial_setup
      when: (tower_job_1.results[-1].status | default('')) != "running"

    - name: wait for tower job to finish
      uri:
        url: https://{{ ansible_host }}/api/v2/jobs/{{ tower_job_initial_setup.id | default(tower_job_1.results[-1].id) }}/
        method: GET
        user: admin
        password: "{{ admin_password }}"
        validate_certs: False
        force_basic_auth: yes
      register: job_1
      until:
        - job_1.json is defined
        - job_1.json.status == 'successful' or job_1.json.status == 'failed' or job_1.json.finished != None
      retries: 100
      delay: 30

    - name: fail if result is not success
      fail:
        msg: Job failed!
      when: job_1.json.status != 'successful'
  when: tower_job_1.results | length == 0 or tower_job_1.results[-1].status != "successful"