---
- name: configure sap workshop
  hosts: sap_nodes
  become: true
  gather_facts: false
  tasks:
    - name: enable root login
      replace:
        path: /root/.ssh/authorized_keys
        regexp: '(.*)(ssh-rsa .*)$'
        replace: '\2'
      changed_when: no

- name: RHN register
  hosts: sap_nodes
  become: true
  vars:
    activation_keys:
      s4app: SAP S4 Server
      hana: SAP HANA Server

  pre_tasks:

    - name: set repos
      set_fact:
        repo_channels:
          - rhel-8-for-x86_64-baseos-rpms
          - rhel-8-for-x86_64-appstream-rpms
          - rhel-8-for-x86_64-sap-solutions-rpms
          - rhel-8-for-x86_64-sap-netweaver-rpms
          - ansible-2-for-rhel-8-x86_64-rpms
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == 8

  tasks:
    - block:
        - include_role:
            name: oatakan.rhn

        # we need to lock kernel updates to stay on 8.1 for testing kpatch
        # next two steps are only needed on non-satellite environments as you can lock the content view in satellite otherwise
        - name: install yum version lock
          yum:
            name: yum-plugin-versionlock

        - name: yum version lock kernel* redhat-release*
          command: yum versionlock add kernel redhat-release
          changed_when: false

      rescue:
        - include_role:
            name: oatakan.rhn
          vars:
            role_action: unregister
      when: satellite_host is undefined

    - block:
        - name: install satellite ca cert
          yum:
            name: http://{{ satellite_host }}/pub/katello-ca-consumer-latest.noarch.rpm
            disable_gpg_check: yes
            state: present

        - name: set role to hana
          set_fact:
            role: hana
          when:
            - ('hana' in inventory_hostname)
            - role is undefined or role == ''

        - name: set role to s4app
          set_fact:
            role: s4app
          when:
            - ('s4app' in inventory_hostname)
            - role is undefined or role == ''

        # satellite requires unique hostname, we need to ensure uniqueness by using subdomain
        - name: set hostname
          hostname:
            name: "{{ short_name }}.{{ subdomain }}"

#        - name: subscribe to satellite using activation key
#          command: subscription-manager register --insecure --serverurl {{ satellite_host }} --name {{ inventory_hostname }} --org {{ satellite_org_id | default('Red_Hat') }} --activationkey "{{ activation_keys[role] | default('SAP HANA Server') }}"

        - name: subscribe to satellite using activation key
          redhat_subscription:
            state: present
            server_hostname: "{{ satellite_host }}"
            server_insecure: yes
            activationkey: "{{ activation_keys[role] | default('SAP HANA Server') }}"
            org_id: "{{ satellite_org_id | default('Red_Hat') }}"
#            consumer_name: "{{ inventory_hostname }}"
            auto_attach: true

        - name: remove RHUI redhat-rhui-client-config repos
          yum_repository:
            name: "{{ item }}"
            file: redhat-rhui-client-config
            state: absent
          loop:
            - rhui-client-config-server-8

        - name: remove RHUI redhat-rhui repos
          yum_repository:
            name: "{{ item }}"
            file: redhat-rhui
            state: absent
          loop:
            - rhui-rhel-8-appstream-rhui-debug-rpms
            - rhui-rhel-8-appstream-rhui-rpms
            - rhui-rhel-8-appstream-rhui-source-rpms
            - rhui-rhel-8-baseos-rhui-debug-rpms
            - rhui-rhel-8-baseos-rhui-rpms
            - rhui-rhel-8-baseos-rhui-source-rpms
            - rhui-codeready-builder-for-rhel-8-rhui-debug-rpms
            - rhui-codeready-builder-for-rhel-8-rhui-rpms
            - rhui-codeready-builder-for-rhel-8-rhui-source-rpms

        # this is a temporary fix and only needed when satellite is configured on a public vs private interface
        # and not accessible otherwise
        - block:
            - name: get sat hostname
              shell: cat /etc/rhsm/rhsm.conf | grep 'baseurl'
              register: sat_hostname

            - debug:
                msg: "{{ (sat_hostname.stdout).split('/')[2] }}"

            - name: build hosts file for satellite host
              lineinfile:
                dest: /etc/hosts
                regexp: '^{{ satellite_host }}.*$'
                line: "{{ satellite_host }} {{ (sat_hostname.stdout).split('/')[2] }}"
                state: present

      when: satellite_host is defined